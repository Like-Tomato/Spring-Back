name: CD - Production

on:
  push:
    branches:
      - 'dev'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_TOKEN }}
          submodules: false

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant Execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_ID }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_ID }}/like-tomato:latest .
          docker push ${{ secrets.DOCKERHUB_ID }}/like-tomato:latest

      - name: Deploy to Production EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            echo ${{ secrets.DOCKERHUB_TOKEN }} | sudo docker login -u ${{ secrets.DOCKERHUB_ID }} --password-stdin
            sudo docker pull ${{ secrets.DOCKERHUB_ID }}/like-tomato

            sudo docker ps -f name=like-tomato-api -q | sudo xargs --no-run-if-empty docker container stop
            sudo docker ps -a -f name=like-tomato-api -q | sudo xargs --no-run-if-empty docker container rm

            sudo docker run -d \
              --name like-tomato-api \
              -p 8080:8080 \
              -e "SPRING_PROFILES_ACTIVE=deploy" \
              -e "SPRING_DATASOURCE_URL=${{ secrets.DB_URL }}" \
              -e "SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }}" \
              -e "SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }}" \
              -e "TZ=Asia/Seoul" \
              ${{ secrets.DOCKERHUB_ID }}/like-tomato